version: "3"
volumes:
  dbbackups:
  postgis-data:

services:
  app:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
      # Add any other Stream port you want to expose
      - '21:21' # FTP
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      # Uncomment this if IPv6 is not enabled on your host
      DISABLE_IPV6: 'true'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
      - ./config.json:/app/config/production.json
    depends_on:
      - db_nginx

  db_nginx:
    image: 'jc21/mariadb-aria:latest'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./data/mysql:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  db:
    image: kartoza/postgis
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=Skazi2020
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    ports:
      - 6000:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  dbbackups:
    image: kartoza/pg-backup
    hostname: pg-backups
    volumes:
      - dbbackups:/backups
    environment:
      - DUMPPREFIX=PG_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=Skazi2020
      - POSTGRES_PORT=6000
      - POSTGRES_HOST=db
      - POSTGRES_DBNAME=gis
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
